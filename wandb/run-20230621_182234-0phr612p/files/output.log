/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loggers/wandb.py:396: UserWarning: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
  rank_zero_warn(
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA GeForce RTX 3090') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name            | Type             | Params
-----------------------------------------------------
0 | gloss_encoder   | GlossEncoder     | 108 M
1 | context_encoder | ContextEncoder   | 108 M
2 | loss            | CrossEntropyLoss | 0
3 | cc              | CosineSimilarity | 0
-----------------------------------------------------
216 M     Trainable params
0         Non-trainable params
216 M     Total params
866.482   Total estimated model params size (MB)
/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:432: PossibleUserWarning: The dataloader, val_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 20 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/utilities/data.py:120: UserWarning: Your `IterableDataset` has `__len__` defined. In combination with multi-process data loading (when num_workers > 1), `__len__` could be inaccurate if each worker is not configured independently to avoid having duplicate data.
  rank_zero_warn(
Sanity Checking DataLoader 0:  50%|█████████████             | 1/2 [00:00<00:00,  1.07it/s]
/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/utilities/data.py:76: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 8. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:432: PossibleUserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 20 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/core/module.py:707: UserWarning: `training_step` must be implemented to be used with the Lightning Trainer
  rank_zero_warn("`training_step` must be implemented to be used with the Lightning Trainer")
/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:129: UserWarning: `training_step` returned `None`. If this was on purpose, ignore this warning...
Sanity Checking DataLoader 0: 100%|██████████████████████████| 2/2 [00:01<00:00,  1.10it/s]-2851.7807006835938

Epoch 0: 100%|████████████████████████████| 2494/2494 [00:04<00:00, 543.38it/s, v_num=612p]





















































Validation DataLoader 0:  99%|██████████████████████████▊| 138/139 [01:46<00:00,  1.29it/s]
Traceback (most recent call last):
  File "/home/andrea/Documents/Computer Science/Natural Language Procesing/nlp2023-hw2/train_model.py", line 4, in <module>
    train()
  File "/home/andrea/Documenti/Computer Science/Natural Language Procesing/nlp2023-hw2/hw2/stud/train.py", line 104, in train
    trainer.fit(model, train_dataloader, val_dataloader)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 42, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    results = self._run_stage()
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    self.fit_loop.run()
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    self.advance()
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 134, in run
    self.on_advance_end()
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 248, in on_advance_end
    self.val_loop.run()
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/utilities.py", line 177, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 115, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 375, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_kwargs.values())
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py", line 379, in validation_step
    return self.model.validation_step(*args, **kwargs)
  File "/home/andrea/Documenti/Computer Science/Natural Language Procesing/nlp2023-hw2/hw2/stud/biencoder.py", line 131, in validation_step
    padded_gold_input_idx[idx, :gold_senses_idx[idx].shape[1]] = gold_senses_idx[idx][0, :]
IndexError: too many indices for tensor of dimension 1
[31m╭─────────────────────────── [39m[1mTraceback (most recent call last)[31m[22m ───────────────────────────╮
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/Documents/Computer Science/Natural Language                                [31m│
[31m│[39m Procesing/nlp2023-hw2/[1mtrain_model.py[22m:[94m4[39m in [92m<module>[39m                                      [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   1 [94mfrom[39m [4mhw2.stud.train[24m [94mimport[39m train                                                    [31m│
[31m│[39m   2                                                                                     [31m│
[31m│[39m   3 [94mif[39m [91m__name__[39m == [33m'__main__'[39m:                                                          [31m│
[31m│[39m [31m❱ [39m4 │   train()                                                                         [31m│
[31m│[39m /home/andrea/Documenti/Computer Science/Natural Language                                [31m│
[31m│[39m Procesing/nlp2023-hw2/hw2/stud/[1mtrain.py[22m:[94m104[39m in [92mtrain[39m                                    [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   101 │   │   │   │   │   │    gradient_clip_val=config.gradient_clipping,              [31m│
[31m│[39m   102 │   │   │   │   │   │    callbacks=[pl.callbacks.EarlyStopping(monitor=[33m'val_loss'[39m [31m│
[31m│[39m   103 │                                                                                 [31m│
[31m│[39m [31m❱ [39m104 │   trainer.fit(model, train_dataloader, val_dataloader)                          [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/trainer/[1mtrainer.py[22m:[94m531[39m in [92mfit[39m                                                      [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m    528 │   │   [33m"""[39m                                                                      [31m│
[31m│[39m    529 │   │   model = _maybe_unwrap_optimized(model)                                   [31m│
[31m│[39m    530 │   │   [96mself[39m.strategy._lightning_module = model                                  [31m│
[31m│[39m [31m❱ [39m 531 │   │   call._call_and_handle_interrupt(                                         [31m│
[31m│[39m    532 │   │   │   [96mself[39m, [96mself[39m._fit_impl, model, train_dataloaders, val_dataloaders, dat [31m│
[31m│[39m    533 │   │   )                                                                        [31m│
[31m│[39m    534                                                                                  [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/trainer/[1mcall.py[22m:[94m42[39m in [92m_call_and_handle_interrupt[39m                                   [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m    39 │   [94mtry[39m:                                                                          [31m│
[31m│[39m    40 │   │   [94mif[39m trainer.strategy.launcher [95mis[39m [95mnot[39m [94mNone[39m:                                 [31m│
[31m│[39m    41 │   │   │   [94mreturn[39m trainer.strategy.launcher.launch(trainer_fn, *args, trainer=tr [31m│
[31m│[39m [31m❱ [39m 42 │   │   [94mreturn[39m trainer_fn(*args, **kwargs)                                        [31m│
[31m│[39m    43 │                                                                                 [31m│
[31m│[39m    44 │   [94mexcept[39m _TunerExitException:                                                   [31m│
[31m│[39m    45 │   │   _call_teardown_hook(trainer)                                              [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/trainer/[1mtrainer.py[22m:[94m570[39m in [92m_fit_impl[39m                                                [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m    567 │   │   │   model_provided=[94mTrue[39m,                                                 [31m│
[31m│[39m    568 │   │   │   model_connected=[96mself[39m.lightning_module [95mis[39m [95mnot[39m [94mNone[39m,                   [31m│
[31m│[39m    569 │   │   )                                                                        [31m│
[31m│[39m [31m❱ [39m 570 │   │   [96mself[39m._run(model, ckpt_path=ckpt_path)                                    [31m│
[31m│[39m    571 │   │                                                                            [31m│
[31m│[39m    572 │   │   [94massert[39m [96mself[39m.state.stopped                                                [31m│
[31m│[39m    573 │   │   [96mself[39m.training = [94mFalse[39m                                                    [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/trainer/[1mtrainer.py[22m:[94m975[39m in [92m_run[39m                                                     [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m    972 │   │   # ----------------------------                                           [31m│
[31m│[39m    973 │   │   # RUN THE TRAINER                                                        [31m│
[31m│[39m    974 │   │   # ----------------------------                                           [31m│
[31m│[39m [31m❱ [39m 975 │   │   results = [96mself[39m._run_stage()                                              [31m│
[31m│[39m    976 │   │                                                                            [31m│
[31m│[39m    977 │   │   # ----------------------------                                           [31m│
[31m│[39m    978 │   │   # POST-Training CLEAN UP                                                 [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/trainer/[1mtrainer.py[22m:[94m1018[39m in [92m_run_stage[39m                                              [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   1015 │   │   │   [94mwith[39m isolate_rng():                                                  [31m│
[31m│[39m   1016 │   │   │   │   [96mself[39m._run_sanity_check()                                         [31m│
[31m│[39m   1017 │   │   │   [94mwith[39m torch.autograd.set_detect_anomaly([96mself[39m._detect_anomaly):        [31m│
[31m│[39m [31m❱ [39m1018 │   │   │   │   [96mself[39m.fit_loop.run()                                              [31m│
[31m│[39m   1019 │   │   │   [94mreturn[39m [94mNone[39m                                                          [31m│
[31m│[39m   1020 │   │   [94mraise[39m [96mRuntimeError[39m([33mf"Unexpected state {[96mself[39m.state[33m}"[39m)                     [31m│
[31m│[39m   1021                                                                                  [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mfit_loop.py[22m:[94m201[39m in [92mrun[39m                                                       [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   198 │   │   [94mwhile[39m [95mnot[39m [96mself[39m.done:                                                      [31m│
[31m│[39m   199 │   │   │   [94mtry[39m:                                                                  [31m│
[31m│[39m   200 │   │   │   │   [96mself[39m.on_advance_start()                                           [31m│
[31m│[39m [31m❱ [39m201 │   │   │   │   [96mself[39m.advance()                                                    [31m│
[31m│[39m   202 │   │   │   │   [96mself[39m.on_advance_end()                                             [31m│
[31m│[39m   203 │   │   │   │   [96mself[39m._restarting = [94mFalse[39m                                          [31m│
[31m│[39m   204 │   │   │   [94mexcept[39m [96mStopIteration[39m:                                                 [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mfit_loop.py[22m:[94m354[39m in [92madvance[39m                                                   [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   351 │   │   [94massert[39m [96mself[39m._data_fetcher [95mis[39m [95mnot[39m [94mNone[39m                                     [31m│
[31m│[39m   352 │   │   [96mself[39m._data_fetcher.setup(combined_loader)                                 [31m│
[31m│[39m   353 │   │   [94mwith[39m [96mself[39m.trainer.profiler.profile([33m"run_training_epoch"[39m):                 [31m│
[31m│[39m [31m❱ [39m354 │   │   │   [96mself[39m.epoch_loop.run([96mself[39m._data_fetcher)                               [31m│
[31m│[39m   355 │                                                                                 [31m│
[31m│[39m   356 │   [94mdef[39m [92mon_advance_end[39m([96mself[39m) -> [94mNone[39m:                                             [31m│
[31m│[39m   357 │   │   trainer = [96mself[39m.trainer                                                    [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mtraining_epoch_loop.py[22m:[94m134[39m in [92mrun[39m                                            [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   131 │   │   [94mwhile[39m [95mnot[39m [96mself[39m.done:                                                      [31m│
[31m│[39m   132 │   │   │   [94mtry[39m:                                                                  [31m│
[31m│[39m   133 │   │   │   │   [96mself[39m.advance(data_fetcher)                                        [31m│
[31m│[39m [31m❱ [39m134 │   │   │   │   [96mself[39m.on_advance_end()                                             [31m│
[31m│[39m   135 │   │   │   │   [96mself[39m._restarting = [94mFalse[39m                                          [31m│
[31m│[39m   136 │   │   │   [94mexcept[39m [96mStopIteration[39m:                                                 [31m│
[31m│[39m   137 │   │   │   │   [94mbreak[39m                                                             [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mtraining_epoch_loop.py[22m:[94m248[39m in [92mon_advance_end[39m                                 [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   245 │   │   should_check_val = [96mself[39m._should_check_val_fx()                            [31m│
[31m│[39m   246 │   │   [94mif[39m should_check_val:                                                      [31m│
[31m│[39m   247 │   │   │   [96mself[39m.trainer.validating = [94mTrue[39m                                        [31m│
[31m│[39m [31m❱ [39m248 │   │   │   [96mself[39m.val_loop.run()                                                   [31m│
[31m│[39m   249 │   │   │   [96mself[39m.trainer.training = [94mTrue[39m                                          [31m│
[31m│[39m   250 │   │                                                                             [31m│
[31m│[39m   251 │   │   # update plateau LR scheduler after metrics are logged                    [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mutilities.py[22m:[94m177[39m in [92m_decorator[39m                                               [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   174 │   │   [94melse[39m:                                                                     [31m│
[31m│[39m   175 │   │   │   context_manager = torch.no_grad                                       [31m│
[31m│[39m   176 │   │   [94mwith[39m context_manager():                                                   [31m│
[31m│[39m [31m❱ [39m177 │   │   │   [94mreturn[39m loop_run([96mself[39m, *args, **kwargs)                                [31m│
[31m│[39m   178 │                                                                                 [31m│
[31m│[39m   179 │   [94mreturn[39m _decorator                                                             [31m│
[31m│[39m   180                                                                                   [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mevaluation_loop.py[22m:[94m115[39m in [92mrun[39m                                                [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   112 │   │   │   │   │   [96mself[39m._store_dataloader_outputs()                              [31m│
[31m│[39m   113 │   │   │   │   previous_dataloader_idx = dataloader_idx                          [31m│
[31m│[39m   114 │   │   │   │   # run step hooks                                                  [31m│
[31m│[39m [31m❱ [39m115 │   │   │   │   [96mself[39m._evaluation_step(batch, batch_idx, dataloader_idx)           [31m│
[31m│[39m   116 │   │   │   [94mexcept[39m [96mStopIteration[39m:                                                 [31m│
[31m│[39m   117 │   │   │   │   # this needs to wrap the `*_step` call too (not just `next`) for  [31m│
[31m│[39m   118 │   │   │   │   [94mbreak[39m                                                             [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/loops/[1mevaluation_loop.py[22m:[94m375[39m in [92m_evaluation_step[39m                                   [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   372 │   │   [96mself[39m.batch_progress.increment_started()                                   [31m│
[31m│[39m   373 │   │                                                                             [31m│
[31m│[39m   374 │   │   hook_name = [33m"test_step"[39m [94mif[39m trainer.testing [94melse[39m [33m"validation_step"[39m         [31m│
[31m│[39m [31m❱ [39m375 │   │   output = call._call_strategy_hook(trainer, hook_name, *step_kwargs.values [31m│
[31m│[39m   376 │   │                                                                             [31m│
[31m│[39m   377 │   │   [96mself[39m.batch_progress.increment_processed()                                 [31m│
[31m│[39m   378                                                                                   [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/trainer/[1mcall.py[22m:[94m287[39m in [92m_call_strategy_hook[39m                                         [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   284 │   │   [94mreturn[39m [94mNone[39m                                                               [31m│
[31m│[39m   285 │                                                                                 [31m│
[31m│[39m   286 │   [94mwith[39m trainer.profiler.profile([33mf"[Strategy]{[39mtrainer.strategy.[91m__class__[39m.[91m__name_[39m [31m│
[31m│[39m [31m❱ [39m287 │   │   output = fn(*args, **kwargs)                                              [31m│
[31m│[39m   288 │                                                                                 [31m│
[31m│[39m   289 │   # restore current_fx when nested context                                      [31m│
[31m│[39m   290 │   pl_module._current_fx_name = prev_fx_name                                     [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/miniconda3/envs/cla-transformer/lib/python3.10/site-packages/pytorch_light [31m│
[31m│[39m ning/strategies/[1mstrategy.py[22m:[94m379[39m in [92mvalidation_step[39m                                      [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   376 │   │   [33m"""[39m                                                                       [31m│
[31m│[39m   377 │   │   [94mwith[39m [96mself[39m.precision_plugin.val_step_context():                            [31m│
[31m│[39m   378 │   │   │   [94massert[39m [96misinstance[39m([96mself[39m.model, ValidationStep)                         [31m│
[31m│[39m [31m❱ [39m379 │   │   │   [94mreturn[39m [96mself[39m.model.validation_step(*args, **kwargs)                    [31m│
[31m│[39m   380 │                                                                                 [31m│
[31m│[39m   381 │   [94mdef[39m [92mtest_step[39m([96mself[39m, *args: Any, **kwargs: Any) -> Optional[STEP_OUTPUT]:      [31m│
[31m│[39m   382 │   │   [33m"""The actual test step.[39m                                                  [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m /home/andrea/Documenti/Computer Science/Natural Language                                [31m│
[31m│[39m Procesing/nlp2023-hw2/hw2/stud/[1mbiencoder.py[22m:[94m131[39m in [92mvalidation_step[39m                      [31m│
[31m│[39m                                                                                         [31m│
[31m│[39m   128 │   │   # add padding to the labels                                               [31m│
[31m│[39m   129 │   │   padded_gold_input_idx = torch.ones_like(cross_dot) * -[94m100[39m                 [31m│
[31m│[39m   130 │   │   [94mfor[39m idx [95min[39m [96mrange[39m([96mlen[39m(gold_senses_idx)):                                   [31m│
[31m│[39m [31m❱ [39m131 │   │   │   padded_gold_input_idx[idx, :gold_senses_idx[idx].shape[[94m1[39m]] = gold_sen [31m│
[31m│[39m   132 │   │                                                                             [31m│
[31m│[39m   133 │   │   loss = [96mself[39m.calculate_loss(cross_dot, padded_gold_input_idx)              [31m│
[31m│[39m   134 │   │   [96mself[39m.log([33m'train_loss'[39m, loss.item(), on_step=[94mTrue[39m, prog_bar=[94mTrue[39m, logger=[94mT[39m [31m│
[31m╰─────────────────────────────────────────────────────────────────────────────────────────╯
[1mIndexError: [22mtoo many indices for tensor of dimension [1m1